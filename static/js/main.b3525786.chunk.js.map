{"version":3,"sources":["second-experiments/DifferentAspectRatio.js","second-experiments/Svgs.js","App.js","index.js"],"names":["DifferentAspectRatio","className","OriginalCopy","PortionAlignedTop","PortionAlignedVerticalMiddle","PortionAlignedBottom","PortionAlignedLeft","PortionAlignedHorizontalMiddle","PortionAlignedRight","Shapes","fill","stroke","x1","y1","x2","y2","x","y","width","height","cx","cy","r","points","CirclePortion","viewBox","ShapesPortion","preserveAspectRatio","Svgs","SmallViewBoxVersion","LargeViewBoxVersion","ShiftedToTheRightViewBoxVersion","ShiftedToTheLeftViewBoxVersion","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3525786.chunk.js","sourcesContent":["import \"./DifferentAspectRatio.css\";\n\nexport function DifferentAspectRatio() {\n  return (\n    <div className=\"different-aspect-ratio\">\n      <h2>Different Aspect Ratio</h2>\n      <OriginalCopy />\n\n      <PortionAlignedTop />\n      <PortionAlignedVerticalMiddle />\n      <PortionAlignedBottom />\n\n      <PortionAlignedLeft />\n      <PortionAlignedHorizontalMiddle />\n      <PortionAlignedRight />\n    </div>\n  );\n}\n\nfunction Shapes() {\n  return (\n    <>\n      <line fill=\"none\" stroke=\"hsl(0,0%, 70%)\" x1=\"0\" y1=\"0\" x2=\"800\" y2=\"0\" />\n      <line fill=\"none\" stroke=\"hsl(0,0%, 70%)\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"300\" />\n      <rect\n        x=\"0\"\n        y=\"0\"\n        width=\"800\"\n        height=\"300\"\n        fill=\"none\"\n        stroke=\"hsl(324, 91%, 75%)\"\n      />\n      <circle cx=\"150\" cy=\"150\" r=\"50\" fill=\"hsl(341, 58%, 57%)\" />\n      <rect\n        x=\"300\"\n        y=\"100\"\n        width=\"100\"\n        height=\"100\"\n        fill=\"hsl(208, 72%, 64%)\"\n      />\n      <polygon\n        fill=\"hsl(41, 100%, 53%)\"\n        stroke=\"hsl(41, 100%, 53%)\"\n        points=\"500,200 600,100 700,200\"\n      />\n    </>\n  );\n}\n\nfunction CirclePortion() {\n  return (\n    <div className=\"portion\">\n      <svg width=\"100px\" height=\"100px\" viewBox=\"100 100 100 100\">\n        <Shapes />\n      </svg>\n    </div>\n  );\n}\n\nfunction ShapesPortion() {\n  return (\n    <div className=\"portion\">\n      <svg width=\"600px\" height=\"100px\" viewBox=\"100 100 600 100\">\n        <Shapes />\n      </svg>\n    </div>\n  );\n}\n\nfunction OriginalCopy() {\n  return (\n    <div className=\"example\">\n      <h2>original</h2>\n      <svg width=\"800px\" height=\"300px\" viewBox=\"0 0 800 300\">\n        <Shapes />\n      </svg>\n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"0 0 800 300\"</p>\n      <p>The viewBox and the viewport has a 1:1 relationship</p>\n    </div>\n  );\n}\n\nfunction PortionAlignedTop() {\n  return (\n    <div className=\"example\">\n      <h2>Portion is aligned to the top - YMin</h2>\n\n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"100 100 100 100\"</p>\n      <p>preserveAspectRatio = \"xMidYMin slice\"</p>\n      <p>The portion is the circle</p>\n      <CirclePortion />\n      <p>\n        The proportion of the portion and the viewport don't match. The\n        portion's proportion is a square and the viewport's proportion is a\n        rectangle.\n      </p>\n      <p>\n        Because I specified to preserve aspect ratio to slice, the portion is\n        tasked to fill the entire viewport and cut off any part of the portion\n        that doesn't fit the viewport\n      </p>\n      <p>\n        Because the aspect ratio is preserved, as the portion is scaled up, its\n        width increases to fill the viewport width and the height increases\n        along with it. This causes an overflow.\n      </p>\n      <p>Here, there is an overflow in the y axis</p>\n      <p>\n        I positioned the portion so that yMin of the portion aligns with the\n        yMin of the viewport\n      </p>\n      <p>\n        This means that the top of the portion gets priority in terms of what is\n        shown\n      </p>\n      <p>The bottom side is cut off</p>\n      <svg\n        width=\"800px\"\n        height=\"300px\"\n        viewBox=\"100 100 100 100\"\n        preserveAspectRatio=\"xMidYMin slice\"\n      >\n        <Shapes />\n      </svg>\n    </div>\n  );\n}\n\nfunction PortionAlignedVerticalMiddle() {\n  return (\n    <div className=\"example\">\n      <h2>Portion is aligned to the middle - YMid</h2>\n\n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"100 100 100 100\"</p>\n      <p>preserveAspectRatio = \"xMidYMid slice\"</p>\n      <p>The portion is the circle</p>\n      <CirclePortion />\n      <p>Here, there is an overflow in the y axis</p>\n      <p>\n        I positioned the portion so that yMid of the portion aligns with the\n        yMid of the viewport\n      </p>\n      <p>\n        This means that the vertical middle of the portion gets priority in\n        terms of what is shown\n      </p>\n      <p>The top and bottom sides are cut off</p>\n      <svg\n        width=\"800px\"\n        height=\"300px\"\n        viewBox=\"100 100 100 100\"\n        preserveAspectRatio=\"xMidYMid slice\"\n      >\n        <Shapes />\n      </svg>\n    </div>\n  );\n}\n\nfunction PortionAlignedBottom() {\n  return (\n    <div className=\"example\">\n      <h2>Portion is aligned to the bottom - YMax</h2>\n      \n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"100 100 100 100\"</p>\n      <p>preserveAspectRatio = \"xMidYMax slice\"</p>\n      <p>The portion is the circle</p>\n      <CirclePortion />\n      <p>Here, there is an overflow in the y axis</p>\n      <p>\n        I positioned the portion so that yMax of the portion aligns with the\n        yMax of the viewport\n      </p>\n      <p>\n        This means that the bottom of the portion gets priority in terms of what\n        is shown\n      </p>\n      <p>The top side is cut off</p>\n      <svg\n        width=\"800px\"\n        height=\"300px\"\n        viewBox=\"100 100 100 100\"\n        preserveAspectRatio=\"xMidYMax slice\"\n      >\n        <Shapes />\n      </svg>\n    </div>\n  );\n}\n\nfunction PortionAlignedLeft() {\n  return (\n    <div className=\"example\">\n      <h2>Portion is aligned to the left side - xMin</h2>\n\n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"100 100 600 100\"</p>\n      <p>preserveAspectRatio = \"xMinYMin slice\"</p>\n      <p>The portion is the three shapes</p>\n      <ShapesPortion />\n      <p>Here, there is an overflow in the x axis</p>\n      <p>\n        I positioned the portion so that xMin of the portion aligns with the\n        xMin of the viewport\n      </p>\n      <p>\n        This means that the left side gets priority in terms of what is shown\n      </p>\n      <p>The right side is cut off</p>\n      <svg\n        width=\"800px\"\n        height=\"300px\"\n        viewBox=\"100 100 600 100\"\n        preserveAspectRatio=\"xMinYMin slice\"\n      >\n        <Shapes />\n      </svg>\n    </div>\n  );\n}\n\nfunction PortionAlignedHorizontalMiddle() {\n  return (\n    <div className=\"example\">\n      <h2>Portion is aligned to the middle - xMid</h2>\n\n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"100 100 600 100\"</p>\n      <p>preserveAspectRatio = \"xMidYMin slice\"</p>\n      <p>The portion is the three shapes</p>\n      <ShapesPortion />\n      <p>Here, there is an overflow in the x axis</p>\n      <p>\n        I positioned the portion so that xMid of the portion aligns with the\n        xMid of the viewport\n      </p>\n      <p>\n        This means that the middle of the portion gets priority in terms of what\n        is shown\n      </p>\n      <p>The left and right sides are cut off</p>\n      <svg\n        width=\"800px\"\n        height=\"300px\"\n        viewBox=\"100 100 600 100\"\n        preserveAspectRatio=\"xMidYMin slice\"\n      >\n        <Shapes />\n      </svg>\n    </div>\n  );\n}\n\nfunction PortionAlignedRight() {\n  return (\n    <div className=\"example\">\n      <h2>Portion is aligned to the right - xMax</h2>\n\n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"100 100 600 100\"</p>\n      <p>preserveAspectRatio = \"xMaxYMin slice\"</p>\n      <p>The portion is the three shapes</p>\n      <ShapesPortion />\n      <p>Here, there is an overflow in the x axis</p>\n      <p>\n        I positioned the portion so that xMax of the portion aligns with the\n        xMax of the viewport\n      </p>\n      <p>\n        This means that the right side gets priority in terms of what is shown\n      </p>\n      <p>The left side is cut off</p>\n      <svg\n        width=\"800px\"\n        height=\"300px\"\n        viewBox=\"100 100 600 100\"\n        preserveAspectRatio=\"xMaxYMin slice\"\n      >\n        <Shapes />\n      </svg>\n    </div>\n  );\n}\n","import \"./Svgs.css\";\n\nexport function Svgs() {\n  return (\n    <div className=\"svgs\">\n      <h1>Experimenting with Svgs</h1>\n      <OriginalCopy />\n      <SmallViewBoxVersion />\n      <LargeViewBoxVersion />\n      <ShiftedToTheRightViewBoxVersion />\n      <ShiftedToTheLeftViewBoxVersion />\n    </div>\n  );\n}\n\nfunction Shapes() {\n  return (\n    <>\n        <line fill=\"none\" stroke=\"hsl(0,0%, 70%)\" x1=\"0\" y1=\"0\" x2=\"800\" y2=\"0\"/>\n        <line fill=\"none\" stroke=\"hsl(0,0%, 70%)\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"300\"/>\n        <rect\n        x=\"0\"\n        y=\"0\"\n        width=\"800\"\n        height=\"300\"\n        fill=\"none\"\n        stroke=\"hsl(324, 91%, 75%)\"\n      />\n      <circle cx=\"150\" cy=\"150\" r=\"50\" fill=\"hsl(341, 58%, 57%)\" />\n      <rect\n        x=\"300\"\n        y=\"100\"\n        width=\"100\"\n        height=\"100\"\n        fill=\"hsl(208, 72%, 64%)\"\n      />\n      <polygon\n        fill=\"hsl(41, 100%, 53%)\"\n        stroke=\"hsl(41, 100%, 53%)\"\n        points=\"500,200 600,100 700,200\"\n      />\n    </>\n  );\n}\n\nfunction OriginalCopy() {\n  return (\n    <div>\n      <h2>original</h2>\n      <svg width=\"800px\" height=\"300px\" viewBox=\"0 0 800 300\">\n        <Shapes />\n      </svg>\n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"0 0 800 300\"</p>\n      <p>The viewBox and the viewport has a 1:1 relationship</p>\n    </div>\n  );\n}\n\nfunction SmallViewBoxVersion() {\n  return (\n    <div>\n        <h2>viewBox is smaller than viewport, same aspect ratio</h2>\n      <svg width=\"800px\" height=\"300px\" viewBox=\"0 0 400 150\">\n        <Shapes />\n      </svg>\n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"0 0 400 150\"</p>\n      <p>\n        The portion of the canvas that is shown is from (0,0) to (400, 150),\n        this is the coordinate system in the canvas\n      </p>\n      <p>That portion of the canvas is then mapped to the viewport</p>\n      <p>\n        The portion of the canvas from (0,0) to (400, 150) is used to fill up\n        the viewport that is 800px wide and 300px long\n      </p>\n    </div>\n  );\n}\n\nfunction LargeViewBoxVersion() {\n  return (\n    <div>\n        <h2>viewBox is larger than viewport, same aspect ratio</h2>\n      <svg width=\"800px\" height=\"300px\" viewBox=\"0 0 1600 600\">\n        <Shapes />\n      </svg>\n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"0 0 1600 600\"</p>\n      <p>\n        The portion of the canvas that is shown is from (0,0) to (1600, 600),\n        this is the coordinate system in the canvas\n      </p>\n      <p>That portion of the canvas is then mapped to the viewport</p>\n      <p>\n        The portion of the canvas from (0,0) to (1600, 600) is used to fill up\n        the viewport that is 800px wide and 300px long\n      </p>\n    </div>\n  );\n}\n\nfunction ShiftedToTheRightViewBoxVersion() {\n  return (\n    <div>\n      <h2>viewBox is shifted to the right by 300 units, same aspect ratio</h2>\n      <svg width=\"800px\" height=\"300px\" viewBox=\"300 0 800 300\">\n        <Shapes />\n      </svg>\n      <p>width=\"800px\" height=\"300px\"</p>\n      <p>viewBox=\"0 0 1600 600\"</p>\n      <p>\n        The portion of the canvas that is shown is from (300,0) to (1100, 300),\n        this is the coordinate system in the canvas\n      </p>\n      <p>That portion of the canvas is then mapped to the viewport</p>\n      <p>\n        The portion of the canvas from (300,0) to (1100, 300) is used to fill up\n        the viewport that is 800px wide and 300px long\n      </p>\n    </div>\n  );\n}\n\n\nfunction ShiftedToTheLeftViewBoxVersion() {\n    return (\n      <div>\n        <h2>viewBox is shifted to the left by 400 units, same aspect ratio</h2>\n        <svg width=\"800px\" height=\"300px\" viewBox=\"-400 0 800 300\">\n          <Shapes />\n        </svg>\n        <p>width=\"800px\" height=\"300px\"</p>\n        <p>viewBox=\"-400 0 800 300\"</p>\n        <p>\n          The portion of the canvas that is shown is from (-400,0) to (400, 300),\n          this is the coordinate system in the canvas\n        </p>\n        <p>That portion of the canvas is then mapped to the viewport</p>\n        <p>\n          The portion of the canvas from (-400,0) to (400, 300) is used to fill up\n          the viewport that is 800px wide and 300px long\n        </p>\n      </div>\n    );\n  }","import './App.css';\nimport { DifferentAspectRatio } from './second-experiments/DifferentAspectRatio';\nimport { Svgs } from './second-experiments/Svgs';\n// import { SvgE } from './first-experiments/SvgE';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Svgs />\n      <DifferentAspectRatio />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}